@model CrudContactListMvc.Models.Contact

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Contact</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" onchange="CheckEmail()" id="emailInput"/>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Surname" class="control-label"></label>
                <input asp-for="Surname" class="form-control" />
                <span asp-validation-for="Surname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input type="password" asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BirthDate" class="control-label"></label>
                <input asp-for="BirthDate" class="form-control" />
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId" onchange="Select()"></select>
            </div>
            <div class="form-group" id="hiddenSubcategory">
                <label asp-for="Subcategory" class="control-label"></label>
                <select asp-for="SubcategoryId" class="form-control" asp-items="ViewBag.SubcategoryId"></select>
            </div>            
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<!-- https://stackoverflow.com/questions/74607305/how-do-you-hide-a-div-element-based-on-user-input-on-a-razor-page -->
@section scripts
{
    <script>
        function Select()
        {
            //get the element by id
            var select = document.getElementById("CategoryId");
            var selectSubcat = document.getElementById("SubcategoryId");
            //get the option's text
            var index = select.selectedIndex;
            var text = select.options[index].text;
            // Business has id 1 in the database
            // get from controller through 
            var categoryName = "@ViewBag.DropDownCategory";
            //if option's text is not Business, hide the second dropdownlist.
            // if (text != "Business") {
            if (text != categoryName) {
                //hiden the dropdownlist
                document.getElementById("hiddenSubcategory").style.display = 'none';

                // Setting null value at SelectList
                var nullVal = "";
                var findedNullOption = selectSubcat.querySelector(`option[value="${nullVal}"]`);
                if (findedNullOption == null)
                {
                    var newOption = new Option('', '');
                    selectSubcat.add(newOption);
                    selectSubcat.value = '';
                }

            } else {
                //show the dropdownlist
                document.getElementById("hiddenSubcategory").style.display = 'block';


                // Log all option values
                // var selectSubcat = document.getElementById("SubcategoryId");
                // console.log('Current options:');
                // for (let option of selectSubcat.options) {
                //     console.log(option.value);
                // }


                // Removing null value at SelectList
                var valueToRemove = "";
                var optionToRemove = selectSubcat.querySelector(`option[value="${valueToRemove}"]`);
                if (optionToRemove)
                {
                    optionToRemove.remove();
                }
                // Set the first remaining element as the active value
                if (selectSubcat.options.length > 0)
                {
                    selectSubcat.selectedIndex = 0;
                }


            }
        }


        function CheckEmail()
        {
            var emailInput = document.getElementById("emailInput");
            var emails = @Html.Raw(Json.Serialize(ViewBag.emails));
            if (emails.includes(emailInput.value))
            {
                emailInput.value = "This email is already in the Database."
            }

        }
    </script>


    <!-- DEfault View block element -->
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

